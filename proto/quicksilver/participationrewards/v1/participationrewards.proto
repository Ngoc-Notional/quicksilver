syntax = "proto3";
package quicksilver.participationrewards.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/participationrewards/types";

enum ClaimType {
  option (gogoproto.goproto_enum_prefix) = false;

  // Undefined action (per protobuf spec)
  ClaimTypeUndefined = 0;
  ClaimTypeLiquidToken = 1;
	ClaimTypeOsmosisPool = 2;
	ClaimTypeCrescentPool = 3;
	ClaimTypeSifchainPool = 4;
}

// DistributionProportions defines the proportions of minted QCK that is to be
// allocated as participation rewards.
message DistributionProportions {
  option (gogoproto.goproto_getters) = false;

  string validator_selection_allocation = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string holdings_allocation = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string lockup_allocation = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Params holds parameters for the participationrewards module.
message Params {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // distribution_proportions defines the proportions of the minted
  // participation rewards;
  DistributionProportions distribution_proportions = 1
      [ (gogoproto.nullable) = false ];
}

// Claim define the users claim for holdings rewards for the last epoch.
message Claim {
  option (gogoproto.goproto_getters) = false;
  
  string user_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string zone = 2;
  int64 held_amount = 3;
}

message KeyedProtocolData {
  string key = 1;
  ProtocolData protocol_data = 2;
}
// Protocol Data is an arbitrary data type held against a given zone for the
// determination of rewards.
message ProtocolData {
  string protocol = 1;
  string type = 2;
  bytes data = 3 [ (gogoproto.casttype) = "encoding/json.RawMessage" ];
}